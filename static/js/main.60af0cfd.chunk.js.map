{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burguerStatus","setBurguerStatus","useSelector","Container","src","alt","Menu","map","index","key","href","RightMenu","CustomMenu","onClick","BurguerNav","show","CloseWrapper","CustomClose","styled","div","ListIcon","props","CloseIcon","Section","title","description","leftbuttxt","rightbuttxt","backgroundImg","Wrap","bgImage","bottom","Itemtext","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60af0cfd.chunk.js","sourcesContent":["\r\nimport {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    cars: [\"Model S\", \"Model 3\", \" Model X\", \"Model Y\"]\r\n}\r\n\r\n\r\n\r\nconst carSlice = createSlice({\r\n    name: \"car\",\r\n    initialState,\r\n    reducers: {}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSlice.reducer","import React, {useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { selectCars } from '../features/car/carSlice';\r\nimport { useSelector} from 'react-redux';\r\n\r\n\r\n\r\n\r\nfunction Header() {\r\n    const[burguerStatus, setBurguerStatus] = useState(false);\r\n    const cars = useSelector(selectCars)\r\n  \r\n\r\n    return (\r\n        <Container>\r\n            <a>\r\n                <img src=\"images/logo.svg\" alt=\"Logo tesla\"/>\r\n            </a>\r\n            <Menu>\r\n                {cars && cars.map((car, index) =>(\r\n                    <a key = {index} href=\"#\"> {car} </a>\r\n                ))}\r\n                \r\n            </Menu>\r\n            <RightMenu>\r\n                <a href=\"#\">Shop</a>\r\n                <a href=\"#\">Tesla account</a>\r\n                <CustomMenu onClick= {() => setBurguerStatus(true)} />\r\n            </RightMenu>\r\n            <BurguerNav show = {burguerStatus}>\r\n                <CloseWrapper>\r\n                    <CustomClose onClick= {() => setBurguerStatus(false)}/>\r\n                </CloseWrapper>\r\n                {cars && cars.map((car, index) =>(\r\n                    <li key = {index}><a  href=\"#\"> {car} </a></li>\r\n                ))}\r\n                <li><a href=\"#\">Exisiting inventory</a></li>\r\n                <li><a href=\"#\">Used inventory</a></li>\r\n                <li><a href=\"#\">Trade-in</a></li>\r\n                <li><a href=\"#\">Cybertruck</a></li>\r\n                <li><a href=\"#\">Roadaster</a></li>\r\n                <li><a href=\"#\">hola</a></li>\r\n                <li><a href=\"#\">manola</a></li>\r\n                <li><a href=\"#\">cara</a></li>\r\n                <li><a href=\"#\">cola</a></li>\r\n\r\n\r\n\r\n            </BurguerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst Container = styled.div`\r\n    min-height: 60px;\r\n    position: fixed;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    top: 0;\r\n    left:0;\r\n    right:0;\r\n    z-index:1\r\n`\r\n\r\n\r\nconst Menu = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    flex: 1;\r\n    justify-content:center;\r\n\r\n    a {\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        margin-right: 10px;\r\n        \r\n    }\r\n    @media(max-width: 768px ) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nconst RightMenu = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\na {\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    padding: 0 10px;\r\n    flex-wrap: nowrap;\r\n}\r\n`\r\n\r\nconst CustomMenu = styled(ListIcon)`\r\n    cursor: pointer;\r\n`\r\n\r\nconst BurguerNav = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: white;\r\n    width: 300px;\r\n    z-index: 100;\r\n    list-style: none;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: start;\r\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition: transform 0.3s ease-out;\r\n    \r\n    \r\n    li {\r\n        padding: 15px 0; \r\n        border-bottom: 1px solid rgba(0,0,0, 0.2);\r\n\r\n        a {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst CustomClose = styled(CloseIcon)`\r\n    cursor: pointer;\r\n`\r\n\r\nconst CloseWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nfunction Section({title, description, leftbuttxt, rightbuttxt, backgroundImg}) {\r\n    return (\r\n        <Wrap bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <Itemtext>\r\n                    <h1> {title}</h1>\r\n                    <p>{description}</p>\r\n                </Itemtext>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftbuttxt}\r\n                        </LeftButton>\r\n                        {rightbuttxt && \r\n                            <RightButton>\r\n                                {rightbuttxt}\r\n                            </RightButton>\r\n                        }\r\n                        \r\n\r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <DownArrow src=\"images/down-arrow.svg\" />\r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\n \r\nconst Wrap = styled.div`\r\n    \r\n    width: 100vw;\r\n    height: 100vh;\r\n    backround-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-image: ${props => `url(\"./images/${props.bgImage}\")`};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst Itemtext = styled.div`\r\n    z-index: 10;    \r\n    padding-top: 10vh;\r\n    text-align: center;\r\n`\r\n\r\n\r\nconst ButtonGroup = styled.div`\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n\r\n`\r\n\r\nconst LeftButton = styled.div`\r\n    background-color: rgb(23, 26, 32, 0.8);\r\n    height: 40px;\r\n    width: 256px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100px;\r\n    opacity: 0.85;\r\n    text-transform: uppercase;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    margin: 8px;\r\n`\r\n\r\nconst RightButton = styled(LeftButton)`\r\n    background: white;\r\n    opacity: 0.65;\r\n    color: black;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n    \r\n    height:40px;\r\n    animation: animateDown infinite 1.5s;\r\n    overflow-x: hidden;\r\n\r\n\r\n`\r\n\r\nconst Buttons = styled.div`\r\n\r\n`","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Section from './Section'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section \r\n                title=\"Model-S\"\r\n                description = \"Order online for Touchless delivery\"\r\n                backgroundImg =\"model-s.jpg\"\r\n                leftbuttxt = \"Custom order\"\r\n                rightbuttxt = \"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model-Y\"\r\n                description = \"Order online for Touchless delivery\"\r\n                backgroundImg =\"model-y.jpg\"\r\n                leftbuttxt = \"Custom order\"\r\n                rightbuttxt = \"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model-X\"\r\n                description = \"Order online for Touchless delivery\"\r\n                backgroundImg =\"model-x.jpg\"\r\n                leftbuttxt = \"Custom order\"\r\n                rightbuttxt = \"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model-3\"\r\n                description = \"Order online for Touchless delivery\"\r\n                backgroundImg =\"model-3.jpg\"\r\n                leftbuttxt = \"Custom order\"\r\n                rightbuttxt = \"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Lower cost solar panel in america\"\r\n                description = \"Money Back guarantee\"\r\n                backgroundImg =\"solar-panel.jpg\"\r\n                leftbuttxt = \"Order Now\"\r\n                rightbuttxt = \"Learn More\"\r\n            />\r\n            <Section \r\n                title=\"Solar for new roofs\"\r\n                description = \"Solar roof cost less than a  new roof plus solar panels\"\r\n                backgroundImg =\"solar-roof.jpg\"\r\n                leftbuttxt = \"Order Now\"\r\n                rightbuttxt = \"Learn More\"\r\n            />\r\n            <Section \r\n                title=\"Accesories\"\r\n                description = \"\"\r\n                backgroundImg =\"accessories.jpg\"\r\n                leftbuttxt = \"Shop Now\"\r\n                \r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n`","import React from 'react';\n// import logo from './logo.svg';\n// import { Counter } from './features/counter/Counter';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from \"../features/car/carSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}